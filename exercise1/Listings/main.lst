C51 COMPILER V9.57.0.0   MAIN                                                              04/21/2020 21:49:55 PAGE 1   


C51 COMPILER V9.57.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.EXE code\main.c OPTIMIZE(8,SPEED) BROWSE INCDIR(.\Code) DEBUG OBJECTEXTEND P
                    -RINT(.\Listings\main.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include <STC15F2K60S2.h>
   2          #include <global.h>
   3          #include <segment.h>
   4          #include <timer.h>
   5          #include <keyboard.h>
   6          #include <iic.h>
   7          
   8          
   9          
  10          u16 Systick = 0;
  11          u8 count = 0;
  12          u8 SecNum = 0;
  13          u8 MinNum = 0;
  14          u8 SegLength = 4;
  15          u8 SegContent[4] = {0, 0, 0, 0};  //数码管显示内容
  16          u8 code SegSit [] = {3, 4, 7, 8}; //显示位置
  17          u8 Seg_i= 0;            //刷新序号
  18          u8 BtnPressed = BtnNone;
  19          
  20          void FreshSeg();
  21          
  22          
  23          void main()
  24          {
  25   1        InitBuzzer();         //关闭蜂鸣器
  26   1        Timer0Init();         
  27   1        Timer1Init();
  28   1        ReadAddr(0x05, &SecNum, &MinNum);
  29   1        
  30   1        while(1){
  31   2          u16 SystickTmp = Systick; //缓存对时
  32   2          if(Systick > 40000){    //20s设定溢出
  33   3            Systick = 0;
  34   3          }
  35   2          
  36   2          
  37   2          //每500ms计算和写入
  38   2          if(Systick % 1000 == 0){
  39   3            // 显示内容计算
  40   3            SegContent[0] = MinNum / 10;
  41   3            SegContent[1] = MinNum % 10;
  42   3            SegContent[2] = SecNum / 10;
  43   3            SegContent[3] = SecNum % 10;
  44   3            WriteAddr(0x05, SecNum, MinNum);
  45   3          }
  46   2          
  47   2          
  48   2          //每50ms扫一次键盘响应
  49   2          if(Systick % 100 == 0){ 
  50   3            BtnPressed = KeyScan();
  51   3            if(BtnPressed != BtnNone){
  52   4              switch (BtnPressed){
  53   5                //按键1， 加1s
  54   5                case Btn1:
C51 COMPILER V9.57.0.0   MAIN                                                              04/21/2020 21:49:55 PAGE 2   

  55   5                  if(SecNum >= 59){ 
  56   6                    SecNum = 0;
  57   6                    MinNum ++; 
  58   6                  }
  59   5                  else
  60   5                    SecNum ++;
  61   5                  break;
  62   5                //按键2， 减1s
  63   5                case Btn2:
  64   5                  if(SecNum == 0){  
  65   6                    SecNum = 59;
  66   6                    MinNum --;
  67   6                  }
  68   5                  else
  69   5                    SecNum --;
  70   5                  break;
  71   5                //按键3，  清零
  72   5                case Btn3:
  73   5                  SecNum = 0;
  74   5                  MinNum = 0;
  75   5                  break;
  76   5                //按键4，  暂停
  77   5                case Btn4:
  78   5                  //
  79   5                  break;
  80   5                default:  ;
  81   5              }
  82   4            }
  83   3          }
  84   2          
  85   2          while(SystickTmp == Systick) ;  //系统刷新
  86   2        }
  87   1      }
  88          
  89          
  90          // 系统中断 500us一次
  91          void T0Interrupt()  interrupt 1
  92          {
  93   1        Systick ++;
  94   1        if(Systick % 10 == 0){ //每5ms刷新数码管
  95   2          FreshSeg();
  96   2        }
  97   1      }
  98          
  99          
 100          // 计时器1 50ms一次
 101          void T1Interrupt()  interrupt 3
 102          {
 103   1        count++;
 104   1        if(count >= 20){
 105   2          count = 0;
 106   2          if(SecNum >= 59){   //每隔60s清零
 107   3            SecNum = 0;
 108   3            MinNum ++;      //不考虑分钟溢出
 109   3          }
 110   2          else{
 111   3            SecNum++;
 112   3          }
 113   2        }
 114   1      }
 115          
 116          
C51 COMPILER V9.57.0.0   MAIN                                                              04/21/2020 21:49:55 PAGE 3   

 117          
 118          // 刷新数码管每一位
 119          void FreshSeg()
 120          {
 121   1        SegDisplay(SegSit[Seg_i], SegContent[Seg_i]); 
 122   1        if(Seg_i >= SegLength - 1)
 123   1          Seg_i = 0;
 124   1        else
 125   1          Seg_i ++;
 126   1      }
 127          
 128          
 129          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    358    ----
   CONSTANT SIZE    =      4    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     12       2
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
