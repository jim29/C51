C51 COMPILER V9.57.0.0   MAIN                                                              01/22/2020 12:58:48 PAGE 1   


C51 COMPILER V9.57.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\main
                    -.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          /*
   2           *  60s计时器, LED循环流水灯
   3           *  
   4           *      2020/1/22 by MRY
   5           */
   6           
   7          
   8          #include <reg51.h>
   9          #include <intrins.h>
  10          #define FOSC 12000000L    // 12Mhz晶振
  11          #define T50MS (65536 - 50000)   // 计时50ms
  12          #define T25MS (65536 - 25000)   // 计时25ms
  13          
  14          unsigned int t0_cnt = 0;    // T0计数次数
  15          unsigned int t1_cnt = 0;    // T1计数次数
  16          unsigned char seg_num = 0;  // 数码管显示数 0~59  
  17          unsigned char led = 0xFE;   // LED状态
  18          
  19          sfr AUXR = 0x8E;    // Auxiliary Register
  20          
  21          
  22          
  23          // 数码管共阳码表 0,1,2,3,4,5,6,7,8,9
  24          unsigned char code seg_table[] = {
  25            0xC0, 0xF9, 0xA4, 0xB0,
  26            0x99, 0x92, 0x82, 0xF8,
  27            0x80, 0x90};
  28          
  29            
  30          /*
  31           * 延时xms
  32           */
  33          void delay_ms(unsigned int x)
  34          {
  35   1        unsigned int i, j;
  36   1        for (i = 0; i < x; i++)
  37   1          for (j = 0; j < 130; j++)
  38   1            ;
  39   1      }
  40            
  41          /*
  42           * LED闪烁T0中断 125ms
  43          */
  44          void t0_500ms () interrupt 1
  45          {
  46   1        t0_cnt++;
  47   1        if (t0_cnt >= 5) {
  48   2          t0_cnt = 0;
  49   2          led = _crol_(led, 1);
  50   2          P0 = led;
  51   2          P2 |= 0x80;   // ABC = 100, Y7C = 1
  52   2          P2 &= 0x1F;   // ABC = 000, 锁存
  53   2        }
  54   1        else
C51 COMPILER V9.57.0.0   MAIN                                                              01/22/2020 12:58:48 PAGE 2   

  55   1          t0_cnt = t0_cnt;
  56   1      }
  57            
  58            
  59            
  60          
  61          /*
  62           *  数码管T1中断更新 1s
  63          */
  64          void t1_1s() interrupt 3
  65          {
  66   1          t1_cnt++;
  67   1          if (t1_cnt >= 20) { // 计时1s
  68   2            t1_cnt = 0; 
  69   2            if (seg_num >= 59)
  70   2              seg_num = 0;
  71   2            else
  72   2              seg_num++;
  73   2          }
  74   1          else
  75   1            t1_cnt = t1_cnt;
  76   1      }
  77            
  78          
  79          
  80          /*
  81          * 数码管显示
  82          */
  83          void seg_display()
  84          {
  85   1        unsigned char shi, ge;
  86   1        shi = seg_num / 10;
  87   1        ge = seg_num % 10;
  88   1        P0 = seg_table[shi];  
  89   1        P2 |= 0xE0;       // ABC = 111, Y7C = 1
  90   1        P2 &= 0x1F;       // ABC = 000, 锁存
  91   1        P0 = 0x01;        // 十位
  92   1        P2 |= 0xD0;       // ABC = 110, Y6C = 1
  93   1        P2 &= 0x1F;       // ABC = 000, 锁存
  94   1        delay_ms(5);
  95   1        
  96   1        P0 = seg_table[ge];
  97   1        P2 |= 0xE0;       // ABC = 111, Y7C = 1
  98   1        P2 &= 0x1F;       // ABC = 000, 锁存
  99   1        P0 = 0x02;        // 个位
 100   1        P2 |= 0xD0;       // ABC = 110, Y6C = 1
 101   1        P2 &= 0x1F;       // ABC = 000, 锁存
 102   1        delay_ms(5);
 103   1      }
 104            
 105          
 106          void main()
 107          {
 108   1        AUXR &= 0x3F;     //  12T分频模式
 109   1        TMOD = 0x00;      // 16位自动重载
 110   1        TL0 = T25MS % 256;
 111   1        TH0 = T25MS / 256;
 112   1        TL1 = T50MS % 256;
 113   1        TH1 = T50MS / 256;
 114   1        TR0 = 1;
 115   1        ET0 = 1;
 116   1        TR1 = 1;
C51 COMPILER V9.57.0.0   MAIN                                                              01/22/2020 12:58:48 PAGE 3   

 117   1        ET1 = 1;
 118   1        EA = 1;
 119   1        
 120   1        
 121   1        while(1) {
 122   2          seg_display();
 123   2        
 124   2        } 
 125   1        
 126   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    248    ----
   CONSTANT SIZE    =     10    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      6    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
